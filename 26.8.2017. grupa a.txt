/* Zadatak 01
Napisati program koji izračunava aritmetičku sredinu svih savršenih brojeva iz zadatog intervala.
 Za neki broj se kaže da je savršen ukoliko je jednak sumi svih svojih djelilaca (ne uključujući njega samog).
 Na primjer, 28 je savršen broj: njegovi djelioci su 1, 2, 4, 7 i 14, a 1 + 2 + 4 + 7 + 14 = 28. 
Jedini savršeni brojevi u opsegu od 1 do 100 su brojevi 6 i 28. U rješenju koristiti funkciju sljedećeg prototipa:

bool IsSavrsen(int); */

#include <iostream>

using namespace std;

bool isSavrsen(int broj)
{
    int suma = 0;
    for(int i = 1; i < broj; i++)
        if(broj % i == 0)
            suma += i;
            
    return suma == broj;
}

double aritmetickaSredina(int m, int n)
{
    int brojac = 0;
    int suma = 0;
    for(int i = m; i <= n; i++)
    {
        if(isSavrsen(i))
        {
            suma += i;
            brojac++;
        }
    }
    
    return double(suma) / brojac;
}

int main()
{
    int m, n;
    do
    {
        cout << "Unesite m i n: ";
        cin >> m >> n;
    }while(m <= 0 || n <= 0);
    
    if(m > n)
    {
        int temp = n;
        n = m;
        m = temp;
    }
    
    cout << "Aritmeticka sredina savrsenih brojeva od " << m << " do " << n
        << " je " << aritmetickaSredina(m, n) << endl;
        
    return 0;
}

/* Zadatak 02
Napisati program koji na osnovu unesenog cijelog broja N formira i ispisuje broj sastavljen od istih cifara u rastućem poretku uzimajući samo neparne cifre. Za sortiranje cifara koristiti pomoćni niz od najviše 10 elemenata. */

Unesite cijeli broj N: 4513982
Broj sa sortiranim ciframa: 1359
Unesite cijeli broj N: 109225
Broj sa sortiranim ciframa: 159

#include <iostream>

using namespace std;

int duzinaBroja(int broj)
{
    int brojac = 0;
    while(broj)
    {
        broj /= 10;
        brojac++;
    }
    
    return brojac;
}

void sortiraj(int niz[], int duzina)
{
    for(int i = 0; i < duzina; i++)
    {
        for(int j = i + 1; j < duzina; j++)
        {
            if(niz[i] > niz[j])
            {
                int temp = niz[i];
                niz[i] = niz[j];
                niz[j] = temp;
            }
        }
    }
}

int noviBroj(int niz[], int duzina)
{
    int suma = 0;
    for(int i = 0; i < duzina; i++)
        if(niz[i] % 2 != 0)
            suma = niz[i] + 10 * suma;
            
    return suma;
}

int main()
{
    int broj;
    do
    {
        cout << "Unesite broj: ";
        cin >> broj;
    }while(broj <= 0);
    
    int niz[10];
    int duzina = duzinaBroja(broj);
    for(int i = 0; i < duzina; i++)
    {
        niz[i] = broj % 10;
        broj /= 10;
    }
    
    
    sortiraj(niz, duzina);
    cout << "Broj sa sortiranim ciframa: " << noviBroj(niz, duzina);
    
    
    return 0;
}

/* Zadatal 03
Napisati funkciju koja kao parametar prima rečenicu (niz od najviše 200 karaktera) i iz nje uklanja svaku riječ
 koja počinje velikim slovom. Pored toga, funkcija treba da prebroji ukupan broj riječi u rečenici 
prije izmjene. Koristiti sljedeći prototip funkcije: int ukloniRijeci(char []);. Npr. ako je data rečenica: 
"Stari most u Mostaru spaja obale rijeke Neretve." funkcija je treba pretvoriti u: "most u spaja obale rijeke". 
Funkcija vraća broj riječi u polaznoj rečenici (prije odsijecanja ostalih riječi).

Radi jednostavnosti rješenja, pretpostavite da je riječ bilo koji niz znakova razdvojen znakom razmak. */

#include <iostream>

using namespace std;

int duzinaRecenice(char recenica[])
{
    int brojac = 0;
    while(recenica[brojac] != '\0')
        brojac++;
        
    return brojac;
}

int ukloniRijeci(char recenica[])
{
    int duzina = duzinaRecenice(recenica);
    
    int brRijeci = 0;
    for(int i = 0; i < duzina; i++)
    {
        //Prolazak kroz znakove
        while(recenica[i] != ' ')
            i++;
        
        brRijeci++;
        
        //Prolazak kroz razmak
        while(recenica[i] == ' ')
            i++;
    }
    
    for(int i = 0; i < duzina; i++)
    {
        if((recenica[i] >= 'A' && recenica[i] <= 'Z') && (recenica[i - 1] == ' ' || i == 0)) //Ako rijec pocinje sa velikim slovom
        {
            int j, k;
            j = k = i;
            //Prolazi kroz rijec
            while(recenica[j] != ' ' && j < duzina)
                j++;
            //Prolazi kroz razmak koji se nalazi prije sljedece rijeci
            while(recenica[j] == ' ')
                j++;
                
            
            //Prepisuje ostatak recenice u prostor gdje se nalazila rijec    
            while(recenica[k] != '\0')
                recenica[k++] = recenica[j++];
            
            duzina = duzina - j + k; //skracuje duzinu recenice za duzinu rijeci
            i--; //vraca i na poziciju prije uklonjene rijeci
        }
    }
    
    return brRijeci;
    
}


int main()
{
    char recenica[200] = {"Stari most U Mostaru spaja obale rijeke Neretve."};
    
    cout << "Recenica ima " << ukloniRijeci(recenica) << " rijeci" << endl;
    
    int i = 0;
    while(recenica[i] != '\0')
        cout << recenica[i++];
    return 0;
}


/* Zadatak 04
Neka je data matrica dimenzija 10 x 12 u kojoj svaki red predstavlja uposlenika određene kompanije, a svaka kolona mjesec u godini. Elementi matrice predstavljaju radne sate uposlenika po mjesecima jedne kalendarske godine. Kreirati, a potom u glavnom programu testirati, sljedeće funkcije:

Funkciju koja za odabranog uposlenika vrši ispis platne liste po mjesecima, ako je poznato da je satnica svih uposlenika 12 KM. Pored toga, funkcija kao rezultat vraća prosječnu mjesečnu platu tog uposlenika.
Funkciju koja pronalazi uposlenika sa najviše prekovremenih radnih sati, ako je usvojeno da jedna radna sedmica ima 40 obaveznih radnih sati, a svaki mjesec 4 sedmice.
Funkciju koja za svaki mjesec u godini ispisuje prosječan iznos isplaćenih plata (za ukupne radne sate) uz posebno naznačen iznos koji je izdvojen isključivo za prekovremeni rad. Ispis za mjesec januar bi izgledao kako slijedi:
-----------------Januar-----------------
Ukupno isplaceno: 25700 KM
Isplaceno za prekovremeni rad: 6500 KM
Napomena: Pretpostaviti da je u programu implementirana funkcija za unos radnih sati jedne kalendarske godine i koristiti je u glavnom programu (dakle, funkciju unos nije potrebno implementirati). */

#include <iostream>
#include <cmath>
#include <iomanip>

using namespace std;

const int brojUposlenika = 10;
const char *imenaMjeseci[]
            { 
                "Januar", 
                "Februar", 
                "Mart", 
                "April", 
                "Maj", 
                "Juni", 
                "Juli", 
                "August",
                "Septembat", 
                "Oktobar", 
                "Novembar", 
                "Decembar"
            };



void Unos(float uposlenici[][12], int mjesec)
{
    //if Test - komentarisati cin >>; koristiti rand()
    cout << "Unesite plate za " << imenaMjeseci[mjesec - 1] << endl;
    for (int i = 0; i < brojUposlenika; i++)
        cin >> uposlenici[i][mjesec - 1]; 
        //uposlenici[i][mjesec - 1] = rand() % 1000 + 1000;
}

float IspisiPlate(float plate[])
{
    float prosjek = 0;
    for (int i = 0; i < 12; i++)
    {
        if (plate[i] != 0)
          cout << setw(12) << imenaMjeseci[i] << ": " << plate[i] << endl;
        
        prosjek += plate[i];
    }

    cout << endl;
    return prosjek / 12;
}

int najvecaProsjecnaPlata(float uposlenici[][12])
{
    float prosjeci[brojUposlenika] = { 0 };
    for (int i = 0; i < brojUposlenika; i++)
    {
        for (int j = 0; j < 12; j++)
            prosjeci[i] += uposlenici[i][j];
        prosjeci[i] /= 12;
    }

    int max = 0;
    for (int i = 0; i < brojUposlenika; i++)
        if (prosjeci[i] > prosjeci[max])
            max = i;

    cout << "Najveca prosjecna plata je: " << round(prosjeci[max] * 100) / 100 << endl;

    return max;
}

int main()
{
    float uposlenici[brojUposlenika][12] = { 0 };

    //if Test komentarisati
    int izbor;
    while (cout << "Izaberite mjesec: ", cin >> izbor, izbor > 0 && izbor < 13)
        Unos(uposlenici, izbor);

    while (cout << "Izaberite radnika: ", cin >> izbor, izbor > 0 && izbor < 11)
        IspisiPlate(uposlenici[izbor - 1]);

    //if Test odkomentarisati
    // srand(time(0));
    // for(int i = 1; i <= 12; i++) Unos(uposlenici, i);
    // for(int i = 1; i <= 10; i++) IspisiPlate(uposlenici[i - 1]);

    najvecaProsjecnaPlata(uposlenici);

    system("pause>0");
    return 0;
}
